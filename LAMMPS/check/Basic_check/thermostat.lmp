# Defining global variables
variable   dia1 equal 1
variable   dia2 equal 1
variable   seed equal 5008
variable   tstep equal  .001
variable   rstep equal 10000/${tstep}

#Set the dimensionality of the simulation.
dimension 	2
units lj
#Sphere is used for granular models.  
#Args: diameter, mass, angular velocity 
atom_style	sphere
# Define boundary condition
# This command cannot be used after the simulation box is defined by a read_data or create_box command or #read_restart command. 
# For 2d simulations, the z dimension must be periodic.  
boundary         p s p
#Setting the pairwise newton flag to off means that if two interacting atoms are on different processors, 
# both processors compute their interaction and the resulting force information is not communicated. 
#LAMMPS should produce the same answers for any newton flag settings, except for round-off issues. 
#The newton bond setting cannot be changed after the simulation box is defined by a read_data or create_box command. 
newton   	off
# mean communicate velocity info with ghost atoms 
comm_modify    vel yes
# define 2D box region. It is  geometric region of space. 
region           box block 0 14 0 10 -1.5 1.5  units box
create_box	 	 1 box
# This command sets parameters that affect the building of pairwise neighbor lists.
neighbor    	 0.2 bin
# delay or every or check or once or cluster or include or exclude or page or one or binsize
neigh_modify     delay 0

#time step of integrator
timestep	${tstep}

lattice 		 sq 1
region           cu block 0 14 0 10  -.5 .5 units box
create_atoms     1 region cu units box
timestep         0.00002
pair_style       lj/cut 1
pair_coeff       * * .2 1

fix		gravity_ all gravity 1 spherical 0.0 180.0


variable  ke atom "vx*vx+vy*vy+vz*vz"

dump       1 all custom 1 dump_thermostat_min.du id type x y z radius vx vy vz fx fy fz v_ke
log        log_thermostat_min.dat

# Energy Minimization
minimize         1.0e-4 1.0e-5 10000 10000

# # rigid boundary
region     1 block 0 14 0 2.5 -.5 .5 units box
group      anvil1 region 1
region     2 block 0 2.5 0 10 -.5 .5 units box
group      anvil2 region 2
region     3 block 11.5 14 0 10 -.5 .5 units box
group      anvil3 region 3
group      anvil union anvil1 anvil2 anvil3
group      mobile subtract all anvil

# dump       2 all custom 1000 dump_thermostat.du id type x y z radius vx vy vz fx fy fz v_ke
log        log_thermostat_min.dat
# initial velocities
compute	   new mobile temp
compute	  Rke all erotate/sphere
compute   TKe all ke
compute   Pe all pe
variable  E  equal c_TKe+c_Pe+c_Rke
variable  ke atom "vx*vx+vy*vy+vz*vz"
variable  t equal "step*dt"
# Output command Set the style and content for printing thermodynamic data to the screen and log file.
thermo_style	custom step atoms vol temp c_Rke c_TKe c_Pe v_E etotal
# Compute and print thermodynamic info (e.g. temperature, energy, pressure) on timesteps that are a 
# multiple of N and at the beginning and end of a simulation. 
thermo 1000

# velocity   mobile create 300 482748 temp new
fix	   1 mobile  nvt/sphere temp 0.000000001  0.000000001 0.05
fix	   2 anvil setforce 0.0 0.0 0.0

# # assigning velocity to the indenter in y direction/loading direction
# variable   y equal "135-step*dt*0.1"
# print      "y is $y" 
# # indenter position and radius at onset of loading
# fix	   	4 mobile indent 1000.0 sphere 70 v_y 70 30.0 units box
# thermo	   	100
# thermo_style    custom step temp  v_y f_4[1] f_4[2] f_4[3] 
run	   	750000
